package gesetzlicheKrankenversicherung

from sozialversicherungsBeitragsParameter import pauschalabgabenGeringfügigeBeschäftigung, beitragssatz, mindestanteilBezugsgrßeBeitragspflichtigeEinnahmeSelbst
from math import min, max

/**
 * Beitrag für die gesetzliche Krankenversicherung.
 */
public function beitrag(
    selbstständig: Boolean
): Float per month {
    to 2003-03-31 {
        if selbstständig {
            return beitragSelbstständig() + beitragRente();
        }
        if geringfügigBeschäftigt {
            return 0 + beitragRente();
        }
        return beitragRegulärBeschäftigt() + beitragRente();
    }

    from 2003-04-01 {
        if selbstständig {
            return beitragSelbstständig() + beitragRente();
        }
        if geringfügigBeschäftigt {
            return 0 + beitragRente();
        }
        if inGleitzone {
            return beitragMidijobArbeitnehmer() + beitragRente();
        }
        return beitragRegulärBeschäftigt() + beitragRente();
    }
}

/**
 * Beitrag des Arbeitgebers für die gesetzliche Krankenversicherung.
 */
public function beitragArbeitgeber(
    geringfügigBeschäftigt: Boolean,
    selbstständig: Boolean,
    bruttolohn: Float
): Float per month {
    to 2003-03-31 {
        if selbstständig {
            return 0.0;
        } else if geringfügigBeschäftigt {
            return bruttolohn * pauschalabgabenGeringfügigeBeschäftigung["ges_krankenv"];
        } else {
            return bruttolohnMonatlich() * beitragssatzArbeitgeber();
        }
    }
    from 2003-04-01 {
        if selbstständig {
            return 0.0;
        } else if geringfügigBeschäftigt {
            return bruttolohn * pauschalabgabenGeringfügigeBeschäftigung["ges_krankenv"];
        } else if inGleitzone {
            return beitragMidijobArbeitgeber();
        } else {
            return bruttolohnMonatlich() * beitragssatzArbeitgeber();
        }
    }
}

/**
 * Zusatzbeitragssatz basierend auf dem Sonderbeitrag bis Dezember 2014 und dem mittleren Zusatzbeitrag seit Januar 2015.
 */
public function zusatzbeitragssatz(): Float per year {
    to 2014-12-31 {
        return beitragssatz["gesetzlicheKrankenversicherung"]["sonderbeitrag"];
    }
    from 2015-01-01 {
        return beitragssatz["gesetzlicheKrankenversicherung"]["mean_zusatzbeitrag"];
    }
}

/**
 * Beitragssatz für die gesetzliche Krankenversicherung, inklusive kassenspezifischer und einheitlicher Zusatzbeitragssätze.
 */
public function beitragssatz(): Float per month {
    to 2005-06-30 {
        return beitragssatz["gesetzlicheKrankenversicherung"]["mean_allgemein"] / 2;
    }
    from 2005-07-01 to 2008-12-31 {
        var meanAllgemein = beitragssatz["gesetzlicheKrankenversicherung"]["mean_allgemein"];
        return meanAllgemein / 2 + zusatzbeitragssatz();
    }
    from 2009-01-01 to 2018-12-31 {
        var allgemein = beitragssatz["gesetzlicheKrankenversicherung"]["allgemein"];
        return allgemein / 2 + zusatzbeitragssatz();
    }
    from 2019-01-01 {
        var allgemeinerBeitragssatz = beitragssatz["gesetzlicheKrankenversicherung"]["allgemein"];
        return (allgemeinerBeitragssatz + zusatzbeitragssatz()) / 2;
    }
}

/**
 * Beitragssatz für die gesetzliche Krankenversicherung am Jahresanfang, inklusive kassenspezifischer und einheitlicher Zusatzbeitragssätze.
 */
public function beitragssatzJahresanfang(): Float per month {
    to 2005-06-30 {
        return sozialversicherungsBeitragsParameter["beitr_satz_jahresanfang"]["gesetzlicheKrankenversicherung"]["mean_allgemein"] / 2;
    }
    from 2005-07-01 to 2008-12-31 {
        var meanAllgemein = sozialversicherungsBeitragsParameter["beitr_satz_jahresanfang"]["gesetzlicheKrankenversicherung"]["mean_allgemein"];
        return meanAllgemein / 2 + zusatzbeitragssatz();
    }
    from 2009-01-01 to 2018-12-31 {
        var allgemein = sozialversicherungsBeitragsParameter["beitr_satz_jahresanfang"]["gesetzlicheKrankenversicherung"]["allgemein"];
        return allgemein / 2 + zusatzbeitragssatz();
    }
    from 2019-01-01 {
        var allgemeinerBeitragssatz = sozialversicherungsBeitragsParameter["beitr_satz_jahresanfang"]["gesetzlicheKrankenversicherung"]["allgemein"];
        return (allgemeinerBeitragssatz() + zusatzbeitragssatz()) / 2;
    }
}

/**
 * Beitragssatz des Arbeitgebers für die gesetzliche Krankenversicherung, inklusive kassenspezifischer und einheitlicher Zusatzbeitragssätze.
 */
public function beitragssatzArbeitgeber(): Float per month {
    to 2008-12-31 {
        return beitragssatz["gesetzlicheKrankenversicherung"]["mean_allgemein"] / 2;
    }
    from 2009-01-01 to 2018-12-31 {
        return beitragssatz["gesetzlicheKrankenversicherung"]["allgemein"] / 2;
    }
    from 2019-01-01 {
        var allgemeinerBeitragssatz = beitragssatz["gesetzlicheKrankenversicherung"]["allgemein"];
        var zusatzbeitragssatz = beitragssatz["gesetzlicheKrankenversicherung"]["mean_zusatzbeitrag"];
        return (allgemeinerBeitragssatz + zusatzbeitragssatz) / 2;
    }
}

/**
 * Beitragssatz des Arbeitgebers für die gesetzliche Krankenversicherung am Jahresanfang, inklusive kassenspezifischer und einheitlicher Zusatzbeitragssätze.
 */
public function beitragssatzArbeitgeberJahresanfang(): Float per month {
    to 2008-12-31 {
        return sozialversicherungsBeitragsParameter["beitr_satz_jahresanfang"]["gesetzlicheKrankenversicherung"]["mean_allgemein"] / 2;
    }
    from 2009-01-01 to 2018-12-31 {
        return sozialversicherungsBeitragsParameter["beitr_satz_jahresanfang"]["gesetzlicheKrankenversicherung"]["allgemein"] / 2;
    }
    from 2019-01-01 {
        var allgemeinerBeitragssatz = sozialversicherungsBeitragsParameter["beitr_satz_jahresanfang"]["gesetzlicheKrankenversicherung"]["allgemein"];
        var zusatzbeitragssatz = beitragssatz["gesetzlicheKrankenversicherung"]["mean_zusatzbeitrag"];
        return (allgemeinerBeitragssatz + zusatzbeitragssatz) / 2;
    }
}

/**
 * Bruttolohn für regulär Beschäftigte, der der gesetzlichen Krankenversicherung unterliegt.
 */
public function bruttolohnRegulärBeschäftigt(
    bruttolohn: Float
): Float per month {
    if bruttolohn > beitragsbemessungsgrenze() {
        return beitragsbemessungsgrenze();
    } else {
        return bruttolohn;
    }
}

/**
 * Bruttolohn, der der gesetzlichen Krankenversicherung unterliegt.
 */
public function bruttolohn(
    regulärBeschäftigt: Boolean
): Float per month {
    if regulärBeschäftigt {
        return bruttolohnRegulärBeschäftigt();
    } else {
        return 0.0;
    }
}

/**
 * Beitrag für regulär Beschäftigte.
 */
public function beitragRegulärBeschäftigt(): Float per month {
    return beitragssatz() * bruttolohn();
}

/**
 * Bemessungsgrundlage für selbstständiges Einkommen.
 */
public function bemessungsgrundlageSelbstständig(
    einkommenSelbstständig: Float,
    selbstständig: Boolean,
    inPrivaterKrankenversicherung: Boolean,
): Float per month {
    if selbstständig and not inPrivaterKrankenversicherung {
        return min(
            beitragsbemessungsgrenze(),
            max(
                bezugsgrßeSelbstständig() * mindestanteilBezugsgrßeBeitragspflichtigeEinnahmeSelbst,
                einkommenSelbstständig
            )
        );
    } else {
        return 0.0;
    }
}

/**
 * Beitrag für selbstständiges Einkommen.
 */
public function beitragSelbstständig(): Float per month {
    var params = beitragssatz["gesetzlicheKrankenversicherung"];
    var ermßigterBeitrag = params["ermßigt"] if "ermßigt" in params else params["mean_allgemein"];
    var zusatzbeitrag = params["mean_zusatzbeitrag"] if "mean_zusatzbeitrag" in params else 0.0;
    var beitragssatzSelbstständig = ermßigterBeitrag + zusatzbeitrag;
    return beitragssatzSelbstständig * bemessungsgrundlageSelbstständig();
}

/**
 * Bemessungsgrundlage für Renteneinkommen.
 */
public function bemessungsgrundlageRente(): Float per month {
    return min(summeGesetzlicheRentePrivateRente(), beitragsbemessungsgrenze());
}

/**
 * Beitrag für Renteneinkommen.
 */
public function beitragRente(): Float per month {
    return beitragssatz() * bemessungsgrundlageRente();
}

/**
 * Beitrag für Midijobs.
 */
public function beitragMidijobSummeArbeitnehmerArbeitgeber(): Float per month {
    from 2003-04-01 {
        return (beitragssatz() + beitragssatzArbeitgeber()) * midijobBemessungsentgelt();
    }
}

/**
 * Arbeitgeberanteil für Midijobs.
 */
public function beitragMidijobArbeitgeber(
    bruttolohn: Float
): Float per month {
    from 2003-04-01 to 2022-09-30 {
        if inGleitzone() {
            return beitragssatzArbeitgeber() * bruttolohn;
        } else {
            return 0.0;
        }
    }
    from 2022-10-01 {
        if inGleitzone() {
            return beitragMidijobSummeArbeitnehmerArbeitgeber() - beitragMidijobArbeitnehmer();
        } else {
            return 0.0;
        }
    }
}

/**
 * Arbeitnehmeranteil für Midijobs.
 */
public function beitragMidijobArbeitnehmer(): Float per month {
    from 2003-04-01 to 2022-09-30 {
        return beitragMidijobSummeArbeitnehmerArbeitgeber() - beitragMidijobArbeitgeber();
    }
    from 2022-10-01 {
        if inGleitzone {
            return beitragspflichtigesEinkommenArbeitnehmer() * beitragssatz();
        } else {
            return 0.0;
        }
    }
}
