package gesetzlichePflegeversicherung

from sozialversicherungsBeitragsParameter import beitragssatz, mindestalterBeitragszuschlagKinderlose

/**
 * Zusaetzlicher Beitrag fuer Kinderlose ab 2005.
 */
public function zusatzbeitragKinderlos(
    hatKinder: Boolean,
    alter: Int
): Boolean {
    from 2005-01-01 {
        var mindestalter = mindestalterBeitragszuschlagKinderlose;
        return (not hatKinder) or alter >= mindestalter;
    }
}

/**
 * Beitragssatz fuer die gesetzliche Pflegeversicherung.
 */
public function beitragssatz(
    anzEigeneKinderBis24: Int
): Float per year {
    from 1995-01-01 to 2004-12-31 {
        return beitragssatz["ges_pflegev"];
    }
    from 2005-01-01 to 2023-06-30 {
        var out = beitragssatz["ges_pflegev"]["standard"];
        if zusatzbeitragKinderlos {
            out += beitragssatz["ges_pflegev"]["zusatz_kinderlos"];
        }
        return out;
    }
    from 2023-07-01 {
        var out = beitragssatz["ges_pflegev"]["standard"];
        if zusatzbeitragKinderlos {
            out += beitragssatz["ges_pflegev"]["zusatz_kinderlos"];
        }
        if anzEigeneKinderBis24 >= 2 {
            out -= beitragssatz["ges_pflegev"]["abschlag_kinder"] * min(anzEigeneKinderBis24 - 1, 4);
        }
        return out;
    }
}

/**
 * Beitrag fuer die gesetzliche Pflegeversicherung bis Maerz 2003.
 */
public function beitrag(
    selbststaendig: Boolean
): Float per month {
    to 2003-03-31 {
        if selbststaendig {
            return beitragSelbststaendig() + beitragRente();
        }
        if geringfuegigBeschaeftigt {
            return 0 + beitragRente();
        }
        return beitragRegulaerBeschaeftigt() + beitragRente();
    }
    from 2003-04-01 {
        if selbststaendig {
            return beitragSelbststaendig() + beitragRente();
        }
        if geringfuegigBeschaeftigt {
            return 0 + beitragRente();
        }
        if inGleitzone {
            return beitragMidijobArbeitnehmer() + beitragRente();
        }
        return beitragRegulaerBeschaeftigt() + beitragRente();
    }
}

/**
 * Beitrag fuer regulaer Beschaeftigte in der gesetzlichen Pflegeversicherung.
 */
public function beitragRegulaerBeschaeftigt(): Float per month {
    var beitrRegulaerBeschaeftigt = gesetzlicheKrankenversicherung.bruttolohn() * beitragssatz();
    return beitrRegulaerBeschaeftigt;
}

/**
 * Beitrag des Arbeitgebers fuer die gesetzliche Pflegeversicherung bis Maerz 2003.
 */
public function beitragArbeitgeber(
    selbststaendig: Boolean
): Float per month {
    to 2003-03-31 {
        if selbststaendig or geringfuegigBeschaeftigt {
            return 0.0;
        } else {
            return bruttolohn * beitragssatz["ges_pflegev"];
        }
    }
    from 2003-04-01 {
        if selbststaendig or geringfuegigBeschaeftigt {
            return 0.0;
        } else if inGleitzone {
            return beitragMidijobArbeitgeber;
        } else {
            return bruttolohn * beitragssatz["ges_pflegev"]["standard"];
        }
    }
}

/**
 * Beitragssatz fuer selbststaendige bis Maerz 2003.
 */
public function beitragSelbststaendig(): Float per month {
    from 1995-01-01 to 2004-12-31 {
        return bemessungsgrundlageSelbststaendig() * beitragssatz["ges_pflegev"] * 2;
    }
    from 2005-01-01 {
        return bemessungsgrundlageSelbststaendig() * (beitragssatz() + beitragssatz["ges_pflegev"]["standard"]);
    }
}

/**
 * Beitrag fuer Renteneinkommen in der gesetzlichen Pflegeversicherung.
 */
public function beitragRente(): Float per month {
    to 2004-03-31 {
        return bemessungsgrundlageRente() * beitragssatz();
    }
    from 2004-04-01 to 2004-12-31 {
        return bemessungsgrundlageRente() * (beitragssatz() * 2);
    }
    from 2005-01-01 {
        return bemessungsgrundlageRente() * (
            beitragssatz() + beitragssatz["ges_pflegev"]["standard"]
        );
    }
}

/**
 * Beitrag fuer Midijobs.
 */
public function beitragMidijobSummeArbeitnehmerArbeitgeber(): Float per month {
    from 2003-04-01 to 2004-12-31 {
        return midijobBemessungsentgelt() * (beitragssatz() + beitragssatz["ges_pflegev"]);
    }
    from 2005-01-01 {
        return midijobBemessungsentgelt() * (beitragssatz() + beitragssatz["ges_pflegev"]["standard"]);
    }
}

/**
 * Arbeitgeberanteil fuer Midijobs bis Dezember 2004.
 */
public function beitragMidijobArbeitgeber(
    bruttolohn: Float
): Float per month {
    to 2004-12-31 {
        return bruttolohn * beitragssatz["ges_pflegev"];
    }
    from 2005-01-01 to 2022-09-30 {
        return bruttolohn * beitragssatz["ges_pflegev"]["standard"];
    }
    from 2022-10-01 {
        return beitragMidijobSummeArbeitnehmerArbeitgeber() - beitragMidijobArbeitnehmer();
    }
}

/**
 * Arbeitnehmeranteil fuer Midijobs in der gesetzlichen Pflegeversicherung.
 */
public function beitragMidijobArbeitnehmer(
    anzEigeneKinderBis24: Int
): Float per month {
    from 2003-04-01 to 2022-09-30 {
        return beitragMidijobSummeArbeitnehmerArbeitgeber() - beitragMidijobArbeitgeber();
    }
    from 2022-10-01 to 2023-06-30 {
        var anBeitragMidijob = beitragspflichtigesEinkommenArbeitnehmer() * beitragssatz["ges_pflegev"]["standard"];
        if gesPflegevZusatzKinderlos {
            anBeitragMidijob += midijobBemessungsentgelt() * beitragssatz["ges_pflegev"]["zusatz_kinderlos"];
        }
        return anBeitragMidijob;
    }
    from 2023-07-01 {
        var pflegevRate = beitragssatz["ges_pflegev"]["standard"];
        if anzEigeneKinderBis24 >= 2 {
            pflegevRate -= beitragssatz["ges_pflegev"]["abschlag_kinder"] * min(anzEigeneKinderBis24 - 1, 4);
        }
        var anBeitragMidijob = beitragspflichtigesEinkommenArbeitnehmer() * pflegevRate;
        if gesPflegevZusatzKinderlos {
            anBeitragMidijob += midijobBemessungsentgelt() * beitragssatz["ges_pflegev"]["zusatz_kinderlos"];
        }
        return anBeitragMidijob;
    }
}